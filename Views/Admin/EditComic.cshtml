@model WebTruyenHay.Models.ViewModels.ComicViewModel
@{
    ViewData["Title"] = "Chỉnh sửa truyện";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-edit me-2"></i>Chỉnh sửa truyện: @Model.Title
                    </h4>
                </div>                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    
                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-warning">
                            <h6>Validation Errors:</h6>
                            <ul class="mb-0">
                                @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <li>@modelError.ErrorMessage</li>
                                }
                            </ul>
                        </div>
                    }                    <form asp-action="EditComic" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <input asp-for="Id" type="hidden" />
                        <input asp-for="CoverImageUrl" type="hidden" value="@(Model.CoverImageUrl ?? "")" />
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Title" class="form-label">Tên truyện *</label>
                                    <input asp-for="Title" class="form-control" placeholder="Nhập tên truyện..." />
                                    <span asp-validation-for="Title" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Author" class="form-label">Tác giả</label>
                                    <input asp-for="Author" class="form-control" placeholder="Nhập tên tác giả..." />
                                    <span asp-validation-for="Author" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Mô tả</label>
                            <textarea asp-for="Description" class="form-control" rows="4" placeholder="Nhập mô tả truyện..."></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Status" class="form-label">Trạng thái</label>
                                    <select asp-for="Status" class="form-select">
                                        <option value="Đang tiến hành">Đang tiến hành</option>
                                        <option value="Hoàn thành">Hoàn thành</option>
                                        <option value="Tạm ngưng">Tạm ngưng</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CoverImageFile" class="form-label">Ảnh bìa mới (tùy chọn)</label>
                                    <input asp-for="CoverImageFile" type="file" class="form-control" accept="image/*" />
                                    <div class="form-text">Chỉ chọn nếu muốn thay đổi ảnh bìa hiện tại</div>
                                </div>
                            </div>
                        </div>                        @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
                        {
                            <div class="mb-3">
                                <label class="form-label">Ảnh bìa hiện tại:</label>
                                <div class="mt-2 current-cover-container">
                                    <img src="@Model.CoverImageUrl" alt="Cover" class="current-cover-image img-thumbnail" />
                                </div>
                            </div>
                        }

                        <div class="mb-3">
                            <label class="form-label">Thể loại</label>
                            <div class="row">
                                @if (ViewBag.Genres != null)
                                {
                                    @foreach (var genre in (List<WebTruyenHay.Models.Genre>)ViewBag.Genres)
                                    {
                                        <div class="col-md-4 col-sm-6">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" 
                                                       name="SelectedGenreIds" value="@genre.Id" 
                                                       id="genre_@genre.Id" 
                                                       @(Model.SelectedGenreIds.Contains(genre.Id) ? "checked" : "") />
                                                <label class="form-check-label" for="genre_@genre.Id">
                                                    @genre.Name
                                                </label>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Comics", "Admin")" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Quay lại
                            </a>
                            <button type="submit" class="btn btn-warning">
                                <i class="fas fa-save me-1"></i>Cập nhật truyện
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <style>
        /* Ensure cover image is always visible */
        .current-cover-container {
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
            position: relative;
            width: 100%;
            max-width: 250px;
            min-height: 200px;
        }
        
        .current-cover-image {
            display: block !important;
            visibility: visible !important;
            opacity: 1 !important;
            width: 100%;
            max-width: 200px !important;
            height: auto;
            max-height: 300px !important;
            min-height: 150px;
            object-fit: contain;
            transform: none !important;
            transition: none !important;
            z-index: 1;
            position: relative;
        }
        
        /* Override any conflicting styles from zoom or other CSS */
        .current-cover-container,
        .current-cover-container * {
            visibility: visible !important;
            opacity: 1 !important;
            transform: none !important;        }
        
        /* Responsive styles */
        .current-cover-container {
            max-width: 250px;
        }
        
        .current-cover-image {
            max-width: 200px !important;
            max-height: 300px !important;
        }        /* Mobile responsive */
    </style>
    
    @{
        WriteLiteral(@"
        <style>
            @media (max-width: 768px) {
                .current-cover-container {
                    max-width: 180px !important;
                }
                
                .current-cover-image {
                    max-width: 150px !important;
                    max-height: 200px !important;
                }
            }
            
            @media (max-width: 480px) {
                .current-cover-container {
                    max-width: 150px !important;
                }
                
                .current-cover-image {
                    max-width: 120px !important;
                    max-height: 160px !important;
                }
            }
        </style>
        ");
    }
    
    <script>
        $(document).ready(function() {
            // Ensure image is always visible regardless of zoom level
            function forceImageVisible() {
                $('.current-cover-image, .current-cover-container').each(function() {
                    $(this).css({
                        'display': 'block',
                        'visibility': 'visible',
                        'opacity': '1',
                        'transform': 'none'
                    });
                });
            }
            
            // Force visibility on various events
            forceImageVisible();
            $(window).on('resize orientationchange zoom', forceImageVisible);
            
            // Set interval to ensure it stays visible
            setInterval(forceImageVisible, 1000);
            
            $('form').on('submit', function(e) {
                console.log('Form is being submitted');
                console.log('Form data:', $(this).serialize());
                
                // Check if required fields are filled
                var title = $('#Title').val();
                var author = $('#Author').val();
                
                console.log('Title:', title);
                console.log('Author:', author);
                
                if (!title || title.trim() === '') {
                    alert('Tiêu đề không được để trống!');
                    e.preventDefault();
                    return false;
                }
                
                return true;
            });
            
            // Also check checkbox values
            $('input[type="checkbox"]').on('change', function() {
                console.log('Checkbox changed:', $(this).attr('name'), $(this).val(), $(this).prop('checked'));
            });
        });
    </script>
}
